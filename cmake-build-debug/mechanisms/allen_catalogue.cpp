// Automatically generated by:
// ../../mechanisms/generate_catalogue -A arbor -I /Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen -o /Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/allen_catalogue.cpp -B multicore -C allen -N arb::allen_catalogue CaDynamics Ca_HVA Ca_LVA Ih Im Im_v2 K_P K_T Kd Kv2like Kv3_1 NaTa NaTs NaV Nap SK

#include <arbor/mechcat.hpp>
#include <arbor/mechanism.hpp>
#include <arbor/mechanism_abi.h>

#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/CaDynamics.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Ca_HVA.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Ca_LVA.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Ih.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Im.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Im_v2.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/K_P.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/K_T.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Kd.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Kv2like.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Kv3_1.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/NaTa.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/NaTs.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/NaV.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/Nap.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/allen/SK.hpp"

namespace arb {

mechanism_catalogue build_allen_catalogue() {
    mechanism_catalogue cat;

    cat.add("CaDynamics", make_arb_allen_catalogue_CaDynamics());
    cat.add("Ca_HVA", make_arb_allen_catalogue_Ca_HVA());
    cat.add("Ca_LVA", make_arb_allen_catalogue_Ca_LVA());
    cat.add("Ih", make_arb_allen_catalogue_Ih());
    cat.add("Im", make_arb_allen_catalogue_Im());
    cat.add("Im_v2", make_arb_allen_catalogue_Im_v2());
    cat.add("K_P", make_arb_allen_catalogue_K_P());
    cat.add("K_T", make_arb_allen_catalogue_K_T());
    cat.add("Kd", make_arb_allen_catalogue_Kd());
    cat.add("Kv2like", make_arb_allen_catalogue_Kv2like());
    cat.add("Kv3_1", make_arb_allen_catalogue_Kv3_1());
    cat.add("NaTa", make_arb_allen_catalogue_NaTa());
    cat.add("NaTs", make_arb_allen_catalogue_NaTs());
    cat.add("NaV", make_arb_allen_catalogue_NaV());
    cat.add("Nap", make_arb_allen_catalogue_Nap());
    cat.add("SK", make_arb_allen_catalogue_SK());
    cat.register_implementation("CaDynamics", std::make_unique<mechanism>(make_arb_allen_catalogue_CaDynamics(), *make_arb_allen_catalogue_CaDynamics_interface_multicore()));
    cat.register_implementation("Ca_HVA", std::make_unique<mechanism>(make_arb_allen_catalogue_Ca_HVA(), *make_arb_allen_catalogue_Ca_HVA_interface_multicore()));
    cat.register_implementation("Ca_LVA", std::make_unique<mechanism>(make_arb_allen_catalogue_Ca_LVA(), *make_arb_allen_catalogue_Ca_LVA_interface_multicore()));
    cat.register_implementation("Ih", std::make_unique<mechanism>(make_arb_allen_catalogue_Ih(), *make_arb_allen_catalogue_Ih_interface_multicore()));
    cat.register_implementation("Im", std::make_unique<mechanism>(make_arb_allen_catalogue_Im(), *make_arb_allen_catalogue_Im_interface_multicore()));
    cat.register_implementation("Im_v2", std::make_unique<mechanism>(make_arb_allen_catalogue_Im_v2(), *make_arb_allen_catalogue_Im_v2_interface_multicore()));
    cat.register_implementation("K_P", std::make_unique<mechanism>(make_arb_allen_catalogue_K_P(), *make_arb_allen_catalogue_K_P_interface_multicore()));
    cat.register_implementation("K_T", std::make_unique<mechanism>(make_arb_allen_catalogue_K_T(), *make_arb_allen_catalogue_K_T_interface_multicore()));
    cat.register_implementation("Kd", std::make_unique<mechanism>(make_arb_allen_catalogue_Kd(), *make_arb_allen_catalogue_Kd_interface_multicore()));
    cat.register_implementation("Kv2like", std::make_unique<mechanism>(make_arb_allen_catalogue_Kv2like(), *make_arb_allen_catalogue_Kv2like_interface_multicore()));
    cat.register_implementation("Kv3_1", std::make_unique<mechanism>(make_arb_allen_catalogue_Kv3_1(), *make_arb_allen_catalogue_Kv3_1_interface_multicore()));
    cat.register_implementation("NaTa", std::make_unique<mechanism>(make_arb_allen_catalogue_NaTa(), *make_arb_allen_catalogue_NaTa_interface_multicore()));
    cat.register_implementation("NaTs", std::make_unique<mechanism>(make_arb_allen_catalogue_NaTs(), *make_arb_allen_catalogue_NaTs_interface_multicore()));
    cat.register_implementation("NaV", std::make_unique<mechanism>(make_arb_allen_catalogue_NaV(), *make_arb_allen_catalogue_NaV_interface_multicore()));
    cat.register_implementation("Nap", std::make_unique<mechanism>(make_arb_allen_catalogue_Nap(), *make_arb_allen_catalogue_Nap_interface_multicore()));
    cat.register_implementation("SK", std::make_unique<mechanism>(make_arb_allen_catalogue_SK(), *make_arb_allen_catalogue_SK_interface_multicore()));
    return cat;
}

const mechanism_catalogue& global_allen_catalogue() {
    static mechanism_catalogue cat = build_allen_catalogue();
    return cat;
}

} // namespace arb

#ifdef STANDALONE
extern "C" {
    [[gnu::visibility("default")]] const void* get_catalogue() {
        static auto cat = arb::build_allen_catalogue();
        return (void*)&cat;
    }
}
#endif

