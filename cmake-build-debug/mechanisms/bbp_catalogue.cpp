// Automatically generated by:
// ../../mechanisms/generate_catalogue -A arbor -I /Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp -o /Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/bbp_catalogue.cpp -B multicore -C bbp -N arb::bbp_catalogue CaDynamics_E2 Ca_HVA Ca_LVAst Ih Im K_Pst K_Tst Nap_Et2 NaTa_t NaTs2_t SK_E2 SKv3_1

#include <arbor/mechcat.hpp>
#include <arbor/mechanism.hpp>
#include <arbor/mechanism_abi.h>

#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/CaDynamics_E2.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/Ca_HVA.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/Ca_LVAst.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/Ih.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/Im.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/K_Pst.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/K_Tst.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/Nap_Et2.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/NaTa_t.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/NaTs2_t.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/SK_E2.hpp"
#include "/Users/antonaf/arbor-ws/arbsimd/cmake-build-debug/mechanisms/generated/bbp/SKv3_1.hpp"

namespace arb {

mechanism_catalogue build_bbp_catalogue() {
    mechanism_catalogue cat;

    cat.add("CaDynamics_E2", make_arb_bbp_catalogue_CaDynamics_E2());
    cat.add("Ca_HVA", make_arb_bbp_catalogue_Ca_HVA());
    cat.add("Ca_LVAst", make_arb_bbp_catalogue_Ca_LVAst());
    cat.add("Ih", make_arb_bbp_catalogue_Ih());
    cat.add("Im", make_arb_bbp_catalogue_Im());
    cat.add("K_Pst", make_arb_bbp_catalogue_K_Pst());
    cat.add("K_Tst", make_arb_bbp_catalogue_K_Tst());
    cat.add("Nap_Et2", make_arb_bbp_catalogue_Nap_Et2());
    cat.add("NaTa_t", make_arb_bbp_catalogue_NaTa_t());
    cat.add("NaTs2_t", make_arb_bbp_catalogue_NaTs2_t());
    cat.add("SK_E2", make_arb_bbp_catalogue_SK_E2());
    cat.add("SKv3_1", make_arb_bbp_catalogue_SKv3_1());
    cat.register_implementation("CaDynamics_E2", std::make_unique<mechanism>(make_arb_bbp_catalogue_CaDynamics_E2(), *make_arb_bbp_catalogue_CaDynamics_E2_interface_multicore()));
    cat.register_implementation("Ca_HVA", std::make_unique<mechanism>(make_arb_bbp_catalogue_Ca_HVA(), *make_arb_bbp_catalogue_Ca_HVA_interface_multicore()));
    cat.register_implementation("Ca_LVAst", std::make_unique<mechanism>(make_arb_bbp_catalogue_Ca_LVAst(), *make_arb_bbp_catalogue_Ca_LVAst_interface_multicore()));
    cat.register_implementation("Ih", std::make_unique<mechanism>(make_arb_bbp_catalogue_Ih(), *make_arb_bbp_catalogue_Ih_interface_multicore()));
    cat.register_implementation("Im", std::make_unique<mechanism>(make_arb_bbp_catalogue_Im(), *make_arb_bbp_catalogue_Im_interface_multicore()));
    cat.register_implementation("K_Pst", std::make_unique<mechanism>(make_arb_bbp_catalogue_K_Pst(), *make_arb_bbp_catalogue_K_Pst_interface_multicore()));
    cat.register_implementation("K_Tst", std::make_unique<mechanism>(make_arb_bbp_catalogue_K_Tst(), *make_arb_bbp_catalogue_K_Tst_interface_multicore()));
    cat.register_implementation("Nap_Et2", std::make_unique<mechanism>(make_arb_bbp_catalogue_Nap_Et2(), *make_arb_bbp_catalogue_Nap_Et2_interface_multicore()));
    cat.register_implementation("NaTa_t", std::make_unique<mechanism>(make_arb_bbp_catalogue_NaTa_t(), *make_arb_bbp_catalogue_NaTa_t_interface_multicore()));
    cat.register_implementation("NaTs2_t", std::make_unique<mechanism>(make_arb_bbp_catalogue_NaTs2_t(), *make_arb_bbp_catalogue_NaTs2_t_interface_multicore()));
    cat.register_implementation("SK_E2", std::make_unique<mechanism>(make_arb_bbp_catalogue_SK_E2(), *make_arb_bbp_catalogue_SK_E2_interface_multicore()));
    cat.register_implementation("SKv3_1", std::make_unique<mechanism>(make_arb_bbp_catalogue_SKv3_1(), *make_arb_bbp_catalogue_SKv3_1_interface_multicore()));
    return cat;
}

const mechanism_catalogue& global_bbp_catalogue() {
    static mechanism_catalogue cat = build_bbp_catalogue();
    return cat;
}

} // namespace arb

#ifdef STANDALONE
extern "C" {
    [[gnu::visibility("default")]] const void* get_catalogue() {
        static auto cat = arb::build_bbp_catalogue();
        return (void*)&cat;
    }
}
#endif

