name: Arbor

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "Default"
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name:  "Linux Min GCC",
            os:    "ubuntu-18.04",
            cc:    "gcc-8",
            cxx:   "g++-8",
            py:    "3.6",
            cmake: "3.12.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "Linux Min Clang",
            os:    "ubuntu-18.04",
            cc:    "clang-8",
            cxx:   "clang++-8",
            py:    "3.6",
            cmake: "3.12.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "MacOS Min",
            os:    "macos-10.15",
            cc:    "clang",
            cxx:   "clang++",
            py:    "3.6",
            cmake: "3.12.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "Linux Max GCC",
            os:    "ubuntu-20.04",
            cc:    "gcc-10",
            cxx:   "g++-10",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "Linux SIMD",
            os:    "ubuntu-20.04",
            cc:    "gcc-10",
            cxx:   "g++-10",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "OFF",
            simd:  "ON"
          }
        - {
            name:  "Linux Max Clang",
            os:    "ubuntu-20.04",
            cc:    "clang-10",
            cxx:   "clang++-10",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "ON",
            simd:  "OFF"
          }
        - {
            name:  "MacOS Max",
            os:    "macos-10.15", # TODO: 11.0 is still private preview, fix later.
            cc:    "clang",
            cxx:   "clang++",
            py:    "3.9",
            cmake: "3.19.x",
            mpi:   "ON",
            simd:  "OFF"
          }
    env:
        CC:         ${{ matrix.config.cc }}
        CXX:        ${{ matrix.config.cxx }}
    steps:
      - name: Get clang/gcc 8
        if: ${{ startsWith(matrix.config.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install -y "clang-8" "lldb-8" "lld-8" "clang-format-8" g++-8
      - name: Set up cmake
        uses: jwlawson/actions-setup-cmake@v1.7
        with:
          cmake-version: ${{ matrix.config.cmake }}
      - name: Update shared library cache
        if: ${{ startsWith(matrix.config.os, 'ubuntu') }}
        run: sudo ldconfig
      - name: Clone w/ submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Check config
        run: |
          $CXX --version
      - name: Build arbor
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DARB_WITH_PYTHON=ON -DARB_VECTORIZE=${{ matrix.config.simd }} -DPython3_EXECUTABLE=`which python` -DARB_WITH_MPI=${{ matrix.config.mpi }} -DARB_USE_BUNDLED_LIBS=ON
          make -j4 tests examples pyarb html
          cd -
      - name: Install arbor
        run: |
          cd build
          sudo make install
          cd -
      - name: Run unit tests
        run: |
          build/bin/unit
